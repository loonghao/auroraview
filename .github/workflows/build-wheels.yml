name: Build Wheels (abi3)

on:
  push:
    branches: [main]
    tags: ['*']
  pull_request:
    paths:
      - 'src/**'
      - 'python/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'pyproject.toml'
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read
  actions: write # Required for uploading artifacts

jobs:
  # Linux builds
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
        include:
          # i686 builds without testing due to architecture mismatch
          - target: i686
            test-wheel: 'false'
          # x86_64 builds with testing
          - target: x86_64
            test-wheel: 'true'

    steps:
      - uses: actions/checkout@v5

      - name: Build and Test Wheel
        uses: ./.github/actions/build-wheel
        with:
          target: ${{ matrix.target }}
          python-version: '3.11'
          test-wheel: ${{ matrix.test-wheel }}
          artifact-name: 'wheels-linux-${{ matrix.target }}'

  # Windows builds
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64]

    steps:
      - uses: actions/checkout@v5

      - name: Build and Test Wheel
        uses: ./.github/actions/build-wheel
        with:
          target: ${{ matrix.target }}
          python-version: '3.11'
          test-wheel: 'true'
          artifact-name: 'wheels-windows-${{ matrix.target }}'

  # macOS builds
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, universal2-apple-darwin]

    steps:
      - uses: actions/checkout@v5

      - name: Build and Test Wheel
        uses: ./.github/actions/build-wheel
        with:
          target: ${{ matrix.target }}
          python-version: '3.11'
          maturin-args: ${{ matrix.target == 'x86_64' && '--release --out dist --sdist --find-interpreter' || '--release --out dist --find-interpreter' }}
          test-wheel: 'true'
          artifact-name: 'wheels-macos-${{ matrix.target }}'

